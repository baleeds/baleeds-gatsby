{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Index","render","posts","this","props","data","allMarkdownRemark","avatarPath","allAuthorYaml","edges","node","avatar","style","margin","href","target","post","key","id","slug","console","fluid","to","className","src","alt","React","Component","Section","styled","FlexBlock","Card","theme","CardImage","CardBody","BioContainer","pageQuery"],"mappings":"0PAQMA,E,gLACJC,kBACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAA9B,MACMC,EAAaJ,KAAKC,MAAMC,KAAKG,cAAcC,MAAM,GAAGC,KAAKC,OAA5C,yBAAnB,IAGA,OACE,yBACE,mBAASC,MAAO,CAAEC,OAAQ,YACxB,+GAIE,qBAAGC,KAAH,sBAA8BC,OAAO,SAJvC,sCAQE,qBAAGD,KAAH,uCAA+CC,OAAO,SARxD,iBAFJ,MAgBE,0BAhBF,iBAiBE,uBACGb,EAAA,KAAU,SAAAc,GAAI,eACb,mBAAWC,IAAKD,OAAUE,IACxB,mBAAMD,IAAKD,cAAiBG,MAC1B,wBACG,UAAAH,EAAA,wGAEEI,YAAYJ,mBAAZI,gBACC,qBACEC,MACEL,iDACGK,UAKb,uBACE,wBAAMC,GAAIN,cAAV,KAAiCO,UAAU,kBACzC,0BAAKP,mBAFT,QAIE,yBAAIA,OAJN,SAKE,wBAAMM,GAAIN,cAAV,KAAiCO,UAAU,eApBpC,0BA4BjB,0BA9CF,aA+CE,uBACE,uBACE,uBAAKC,IAAL,EAAsBC,IAAI,4BAC1B,2BACE,yBADF,iKAME,yBAzDV,0K,GANgBC,IAAMC,WA4EpBC,EAAUC,IAAH,qEAAGA,CAAH,CAAb,yDAMMC,EAAYD,IAAH,uEAAGA,CAAH,CAAf,+DAQME,EAAOF,IAAH,kEAAGA,CAAH,kDACSG,IADT,aAEMA,IAFhB,QAMMC,EAAYJ,IAAH,uEAAGA,CAAH,CAAf,iEAOMK,EAAWL,IAAH,sEAAGA,CAAH,+UAaDG,WAbC,QAcUA,WAdV,QAeOA,IAfP,aAyBMA,WAzBpB,SAgCMG,EAAeN,IAAH,0EAAGA,CAAH,2QASAG,IATA,OAUGA,IAVrB,cA0BA,YAEO,IAAMI,EAAN,c","file":"component---src-pages-index-tsx-997dbee7f93303d499d2.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n// import Layout from \"../layouts\";\nimport { Page } from \"../layouts/Page\";\nimport styled from \"styled-components\";\nimport { theme } from \"../styles/theme\";\nimport Img from \"gatsby-image\";\n\nclass Index extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const avatarPath = this.props.data.allAuthorYaml.edges[0].node.avatar\n      .childImageSharp.original.src;\n\n    return (\n      <Page>\n        <Section style={{ margin: \"120px 0\" }}>\n          <h2>\n            {/* Life is simpler with thoughtful software. */}\n            Ben is a software designer and engineer. Currently creating useful\n            products at{\" \"}\n            <a href=\"https://level.tech/\" target=\"blank\">\n              Level Software\n            </a>\n            . Formerly at{\" \"}\n            <a href=\"https://www.db.com/company/index.htm\" target=\"blank\">\n              Deutsche Bank\n            </a>\n            .\n          </h2>\n        </Section>\n        <h3>Featured work</h3>\n        <Section>\n          {posts.map(post => (\n            <FlexBlock key={post.node.id}>\n              <Card key={post.node.fields.slug}>\n                <CardImage>\n                  {post.node.frontmatter.featuredImage?.childImageSharp\n                    ?.fluid &&\n                    (console.log(post.node.frontmatter.featuredImage) || (\n                      <Img\n                        fluid={\n                          post.node.frontmatter.featuredImage.childImageSharp\n                            .fluid\n                        }\n                      />\n                    ))}\n                </CardImage>\n                <CardBody>\n                  <Link to={post.node.fields.slug} className=\"link-underline\">\n                    <h3>{post.node.frontmatter.title}</h3>\n                  </Link>\n                  <p>{post.node.excerpt}</p>\n                  <Link to={post.node.fields.slug} className=\"link-button\">\n                    View case study\n                  </Link>\n                </CardBody>\n              </Card>\n            </FlexBlock>\n          ))}\n        </Section>\n        <h3>Biography</h3>\n        <Section>\n          <BioContainer>\n            <img src={avatarPath} alt=\"Benjamin Leeds Headshot\" />\n            <div>\n              <p>\n                Benjamin grew up in Durham, NC. He recieved his Bachelor’s in\n                Computer Science from NC State University, while doing design\n                work for the Engineering College.\n              </p>\n              <p>\n                His career has been a blend of software engineering, user\n                research, and visual design. Recently he’s been focused on React\n                / Typescript development with GraphQL.\n              </p>\n            </div>\n          </BioContainer>\n        </Section>\n      </Page>\n    );\n  }\n}\n\nconst Section = styled.div`\n  margin: 20px -12px 120px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FlexBlock = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: 750px) {\n    width: 50%;\n  }\n`;\n\nconst Card = styled.div`\n  border-radius: ${theme.borderRadius};\n  box-shadow: ${theme.shadow};\n  margin: 12px;\n`;\n\nconst CardImage = styled.div`\n  img {\n    border-top-right-radius: 4px;\n    border-top-left-radius: 4px;\n  }\n`;\n\nconst CardBody = styled.div`\n  padding: 24px;\n\n  p {\n    height: 240px;\n\n    @media screen and (min-width: 500px) {\n      height: 180px;\n    }\n  }\n\n  .link-button {\n    height: 42px;\n    color: ${theme.colors.primary};\n    border: 1px solid ${theme.colors.primary};\n    border-radius: ${theme.borderRadius};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-transform: uppercase;\n    font-size: 14px;\n    font-weight: bold;\n\n    :hover,\n    :active {\n      background: ${theme.colors.primary};\n      color: white;\n      text-decoration: none;\n    }\n  }\n`;\n\nconst BioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 12px;\n\n  img {\n    margin: 12px;\n    margin-bottom: 40px;\n    box-shadow: ${theme.shadow};\n    border-radius: ${theme.borderRadius};\n    width: 100%;\n  }\n\n  @media screen and (min-width: 500px) {\n    margin: 0;\n    flex-direction: row;\n\n    img {\n      margin-right: 40px;\n      width: 200px;\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: ASC }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM YYYY\")\n            tags\n            featuredImage {\n              childImageSharp {\n                fluid(maxHeight: 600, maxWidth: 800) {\n                  aspectRatio\n                  base64\n                  tracedSVG\n                  srcWebp\n                  srcSetWebp\n                  originalImg\n                  originalName\n                  presentationWidth\n                  presentationHeight\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allAuthorYaml {\n      edges {\n        node {\n          avatar {\n            childImageSharp {\n              original {\n                width\n                height\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}